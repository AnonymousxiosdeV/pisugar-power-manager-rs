name: build-all

on:
  workflow_call:

jobs:
  build-web:
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v2

      # Nodejs
      - name: Setup Nodejs
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - name: NPM or Yarn install with caching
        uses: bahmutov/npm-install@v1.6.0
        with:
          working-directory: electron

      # Nodejs build web
      - run: npm run build:web
        working-directory: electron

      # Upload artifact
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: pisugar-web
          path: |
            electron/dist
          if-no-files-found: warn

  build-app:
    runs-on: ubuntu-latest
    needs:
      - build-web
    strategy:
      matrix:
        target:
          # - aarch64-unknown-linux-gnu
          - aarch64-unknown-linux-musl
          # - arm-unknown-linux-gnueabi
          # - arm-unknown-linux-gnueabihf
          - arm-unknown-linux-musleabi
          - arm-unknown-linux-musleabihf
          # - i686-unknown-linux-gnu
          # - i686-unknown-linux-musl
          # - riscv64gc-unknown-linux-gnu
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v2

      - name: Fix cargo config
        run: sed -e "s/.*replace-with.*//g" -i .cargo/config

      # Download web
      - name: Download web
        uses: actions/download-artifact@v3
        with:
          name: pisugar-web
          path: |
            electron/dist

      # Rust cache
      - uses: Swatinem/rust-cache@v1

      - name: Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.target }}

      # Latest cross
      - run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Build
        env:
          TARGET: ${{ matrix.target }}
        run: |
          cargo install cargo-deb
          cargo install cargo-rpm
          cross build --target $TARGET --release
          for app in server poweroff programmer; do
            cargo deb --target $TARGET --manifest-path=pisugar-$app/Cargo.toml
            (cd pisugar-$app && cargo rpm build --target $TARGET)
          done

      # Upload artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: pisugar-app-${{ matrix.target }}
          path: |
            target
            !target/**/*.d
            !target/**/.fingerprint
            !target/**/build
            !target/**/deps
            !target/**/examples
            !target/**/incremental

  build-all:
    runs-on: ubuntu-latest
    needs:
      - build-web
      - build-app
    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v2

      - name: Fix cargo config
        run: sed -e "s/.*replace-with.*//g" -i .cargo/config

      - name: Download All
        uses: actions/download-artifact@v3
        with:
          path: |
            download

      - name: Move web
        run: |
          mkdir -p electron/dist
          mv download/web electron/dist/

      - name: Move apps
        run: |
          mkdir -p target
          mv download/* target/

      # aur for archlinux
      - run: (cd scripts/aur; sh build-aur.sh)

      # Upload artifact
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: pisugar-all
          path: |
            target/**/*.deb
            target/**/*.rpm
            scripts/*.sh
            scripts/aur/*.tar.gz
            !scripts/update-version.sh
          if-no-files-found: warn
